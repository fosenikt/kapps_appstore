<!-- Inkluder Quill CSS og JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/quill/2.0.0-dev.3/quill.min.js" type="text/javascript"></script>
<script src="https://unpkg.com/quill-table-ui@1.0.5/dist/umd/index.js" type="text/javascript"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/quill/2.0.0-dev.3/quill.snow.min.css" rel="stylesheet">
<link href="https://unpkg.com/quill-table-ui@1.0.5/dist/index.css" rel="stylesheet">

<form id="form-app-edit-{{>id}}" method="POST">
	<section class="section__page section_app">

		<h2 class="input-editable" style="margin-bottom:5px;" data-field="title" contenteditable="true">{{>title}}</h2>

		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="/">Hjem</a></li>
				<li class="breadcrumb-item"><a href="/apps/all">Apps</a></li>
				<li class="breadcrumb-item"><a href="/apps/app/{{>id}}">{{>title}}</a></li>
				<li class="breadcrumb-item active" aria-current="page">Rediger</li>
			</ol>
		</nav>

		<div class="input-editable" style="margin-bottom:25px; font-size: 1.1rem; font-weight: 600;" data-field="short_description" contenteditable="true">
			{{>short_description}}
		</div>

		<div class="row">
			<div class="col-md-8">

				<div class="box">
					<h3>Bilder</h3>
					<div style="margin-bottom:15px;">
						<button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#modal-app-edit-upload-{{>id}}" data-bs-type="images">
							<i class="fas fa-upload"></i> Last opp
						</button>
						<button type="button" class="btn btn-light" onclick="app_edit_images_refresh();">
							<i class="fas fa-refresh"></i> Refresh
						</button>
					</div>
					<div id="app-edit-images-container-{{>id}}">
						{{if images}}
							{{for images}}
								<div class="thumb" style="background-image: url('{{>image}}');">
									<div class="thumb-footer">
										<div class="left">
											{{if primary=='1'}}
												<i class="fas fa-check" style="color:green;"></i> Hovedbilde
											{{else}}
												<a href="javascript:app_edit_img_set_primary('{{>filename}}');">Sett hovedbilde</a>
											{{/if}}
										</div>
										<div class="right">
											<a href="#" data-bs-toggle="modal" data-bs-target="#modal-app-edit-delete-confirmation" data-bs-id="{{>filename}}" data-bs-type="image">
												<i class="fas fa-trash-alt" style="color:rgb(255, 122, 122);"></i>
											</a>
										</div>
									</div>
								</div>
							{{/for}}
						{{/if}}
					</div>
				</div>

				<div class="box">
					<h3>Beskrivelse</h3>

					<div id="textAppEditDesc">
						{{:description}}
					</div>
				</div>



				<div class="box">
					<h3>Filer</h3>

					<div id="app-edit-files-container-{{>id}}">
						{{if files}}
							{{for files}}
								<div class="file box box-sm box-bg">
									<div class="icon">
										{{:icon}}
									</div>
									<div class="filedata">
										<div class="title">
											<a href="{{>path}}">
												{{>filename}}
											</a>
										</div>
										<div class="info">{{>size.readable}} &middot; {{>time_uploaded}}</div>
									</div>
									<div class="file-actions">
										<a href="#" data-bs-toggle="modal" data-bs-target="#modal-app-edit-delete-confirmation" data-bs-id="{{>id}}" data-bs-type="file">
											<i class="fas fa-trash-alt" style="color:rgb(255, 122, 122);"></i>
										</a>
									</div>
								</div>
							{{/for}}
						{{/if}}
					</div>

					<div>
						<button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#modal-app-edit-upload-{{>id}}" data-bs-type="files">
							<i class="fas fa-upload"></i> Last opp
						</button>
						<button type="button" class="btn btn-light" onclick="app_edit_files_refresh();">
							<i class="fas fa-refresh"></i> Refresh
						</button>
					</div>
				</div>




				<div class="box">
					<h3>Installasjonsveiledning</h3>

					<div id="textAppEditInst">
						{{:description}}
					</div>
				</div>


			</div>



			<div class="col-md-4">

				<div class="detail__block">
					<div class="detail__title">
						<i class="fas fa-user"></i> Eier
					</div>
					<div class="detail__value">
						<a href="/organization/profile/{{>company.public_id}}">{{>company.title}}</a>
					</div>
				</div>
				<div class="detail__block">
					<div class="detail__title">
						<i class="fa-regular fa-file-certificate"></i> Lisens
					</div>
					<div class="detail__value">
						<div class="mb-3">
							<select class="form-select" name="license_id" id="selAppEditLicense" aria-label="Select license"></select>
						</div>
					</div>
					<div style="margin: 5px 2px;" class="muted help">
						<i class="fal fa-info-circle"></i> Velg en lisens. Kan andre ta i bruk det du deler?
					</div>
				</div>
				<div class="detail__block">
					<div class="detail__title">
						<i class="fa-solid fa-hashtag"></i> Tags
					</div>
					<div class="detail__value">
						<div id="tag-container">
							{{if tags.array}}
								{{for tags.array}}
									<span class="badge rounded-pill text-bg-primary">
										{{:#data}}
										<i class="fas fa-times" style="margin-left: 5px; cursor: pointer;"></i>
									</span>
								{{/for}}
							{{/if}}
						</div>

						<div style="margin-top:8px;">
							<input class="form-control" type="text" id="tag-input" placeholder="Legg til tag" />
						</div>
						<div style="margin: 5px 2px;" class="muted help">
							<i class="fal fa-info-circle"></i> Skriv en tag og trykk enter.
						</div>
					</div>
				</div>


				<div class="detail__block">
					<div class="detail__title">
						<i class="fa-solid fa-link"></i> Lenke til kildekode
					</div>
					<div class="detail__value">
						<div style="margin-top:8px;">
							<input class="form-control" type="text" id="link_source_code" name="link_source_code" placeholder="http://" value="{{>link_source_code}}" />
						</div>
						<div style="margin: 5px 2px;" class="muted help">
							<i class="fal fa-info-circle"></i> Ikke påkrevd. Dersom applikasjonen finnes på Github eller tilsvarende, kan den lenkes til her.
						</div>
					</div>
				</div>

				<div>
					<button type="submit" class="btn btn-primary">
						Lagre applikasjon
					</button>
				</div>

			</div>
		</div>

	</section>
</form>


<!-- Felles Upload Modal -->
<div class="modal fade" id="modal-app-edit-upload-{{>id}}" tabindex="-1" aria-labelledby="modal-app-edit-upload-{{>id}}-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="modal-app-edit-upload-{{>id}}-label">Last opp</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="upload-box" id="upload-box">
                    <input type="file" id="file-input" multiple hidden>
                    <div class="upload-area" id="upload-area">
                        <i class="fa fa-cloud-upload-alt fa-3x"></i>
                        <p>Dra og slipp filer her, eller klikk for å velge</p>
                    </div>
                </div>
                <div id="file-preview" class="file-preview"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Lukk</button>
                <button type="button" class="btn btn-primary" id="upload-submit">Last opp</button>
            </div>
        </div>
    </div>
</div>

<!-- Bekreftelsesmodal for sletting -->
<div class="modal fade" id="modal-app-edit-delete-confirmation" tabindex="-1" aria-labelledby="modal-app-edit-delete-confirmation-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modal-app-edit-delete-confirmation-label">Bekreft sletting</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Er du sikker på at du vil slette dette elementet?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Avbryt</button>
        <button type="button" class="btn btn-danger" id="btn-app-edit-item-delete">Slett</button>
      </div>
    </div>
  </div>
</div>




<style>
	.thumb {
		display: inline-block;
		height: 150px;
		width: 160px;
		margin: 4px;
		border-radius: 5px;
		background-position: center !important;
		background-size: cover !important;
		background-repeat: no-repeat !important;
		position: relative !important;
	}

	.thumb .thumb-footer {
		position: absolute;
		display: flex;
		left: 0;
		bottom: 0;
		font-size: 0.8rem;
		background-color: var(--shadow-color);
		width: 100%;
		padding: 6px 8px;
		border-bottom-left-radius: 5px;
		border-bottom-right-radius: 5px;
	}

	.thumb .thumb-footer .left { flex:1 1 auto; }
	.thumb .thumb-footer .right { flex:0 0 20px; text-align:right; }


	.ql-toolbar.ql-snow {
		background-color: #e5eaef;
	}

	.ql-editor {
		font-family: "PT Sans", "Bebas Neue", "akzidenz", sans-serif;
		font-size: 16px; /* Du kan også sette standard tekststørrelse om nødvendig */
		line-height: 1.5;
	}


	#tag-container {
		display: flex;
		flex-wrap: wrap;
		gap: 5px;
	}

	#tag-container .badge {
		display: flex;
		align-items: center;
		padding-right: 8px;
	}

	#tag-container .badge i {
		margin-left: 5px;
		cursor: pointer;
	}

	#tag-input {
		border: none;
		outline: none;
		padding: 5px;
		font-size: 14px;
		flex: 1;
	}
</style>


<script>
	/**
	 * Tags
	 */
	var tagContainer = document.getElementById('tag-container');
	var tagInput = document.getElementById('tag-input');

	if (tagContainer && tagInput) {
		// Håndterer å legge til en ny tag
		tagInput.addEventListener('keypress', function (e) {
			if (e.key === 'Enter') {
				e.preventDefault(); // Hindre skjema submit
				e.stopPropagation(); // Hindre videre bubbling av eventet
				addTag(tagInput.value);
				tagInput.value = '';
			}
		});

		// Håndterer fjerning av tags ved klikk på kryssikonet
		tagContainer.addEventListener('click', function(e) {
			console.log("Klikk registrert på element:", e.target);

			if (e.target.closest('svg') || e.target.closest('path') || e.target.classList.contains('fa-times')) {
				console.log("Kryssikon klikket");
				const badge = e.target.closest('.badge');
				if (badge) {
					console.log("Badge funnet, fjerner:", badge);
					badge.remove();
				} else {
					console.log("Badge ikke funnet");
				}
			} else {
				console.log("Klikket element er ikke et kryssikon");
			}
		});

		// Funksjon for å legge til en ny tag
		function addTag(tag) {
			if (tag.trim() === '') return;
			const tagElement = document.createElement('span');
			tagElement.classList.add('badge', 'rounded-pill', 'text-bg-primary');
			tagElement.textContent = tag.trim();

			const removeIcon = document.createElement('i');
			removeIcon.classList.add('fas', 'fa-times');
			removeIcon.style.marginLeft = '5px';
			removeIcon.style.cursor = 'pointer';

			tagElement.appendChild(removeIcon);
			tagContainer.appendChild(tagElement); // Legger til tag-elementet på slutten av tagContainer

			console.log("Ny tag lagt til:", tagElement);
		}

	} else {
		console.error("Elementene 'tag-container' eller 'tag-input' ble ikke funnet i dokumentet.");
	}




	/**
	 * Form submit
	 */		
	addEvent(document, 'submit', 'form#form-app-edit-{{>id}}', function(e) {
		event.preventDefault(); // Forhindre standard submit-adferd
		console.log('Submit app');

		var quillDesc = new Quill('#textAppEditDesc'); // Initialiser Quill editor for beskrivelse
		var quillInst = new Quill('#textAppEditInst'); // Initialiser Quill editor for installasjonsveiledning

		// Opprett FormData objekt
		var formData = new FormData();
		formData.append('id', '{{>id}}'); // Legg til App ID
		
		// Hent data fra alle elementer med class 'input-editable'
		document.querySelectorAll('.input-editable').forEach(element => {
		var fieldName = element.getAttribute('data-field'); // Hent feltnavn fra data-attribute
		var fieldValue = element.innerText.trim(); // Hent tekstinnhold og trim whitespace
		if (fieldName && fieldValue) {
			formData.append(fieldName, fieldValue); // Legg til data i FormData
		}
		});

		// Hent innhold fra Quill editor for beskrivelse
		var descriptionContent = quillDesc.root.innerHTML;
		formData.append('description', descriptionContent);

		// Hent innhold fra Quill editor for installasjonsveiledning
		var instructionContent = quillInst.root.innerHTML;
		formData.append('installation', instructionContent);


		formData.append('license_id', document.getElementById('selAppEditLicense').value);
		formData.append('link_source_code', document.getElementById('link_source_code').value);

		// Hent tags fra tag-container
		var tags = Array.from(document.querySelectorAll('#tag-container .badge')).map(tag => tag.textContent.trim());
		if (tags.length > 0) {
			formData.append('tags', tags.join(','));
		}

		for (var pair of formData.entries()) {
			console.log(pair[0]+ ', ' + pair[1]); 
		}

		// Send data til backend via rpc_post
		
		remote.rpc_post(`${config.api_url}/app/update/all`, formData)
			.then(response => {
				console.log('response', response);
				if (response.status === 'success') {
					notification.success('Applikasjon / Tjeneste ble oppdatert!');
					window.location.replace("/apps/app/{{>id}}");
					setTimeout(() => {
						window.location.reload();
					}, 500);
				} else {
					notification.error('Kunne ikke lagre tjeneste!');
				}
			})
			.catch(err => {
				console.error('Feil ved sending:', err);
				if (err.status == 400) {
					if (err.response.message != null) {
						notification.error(`En feil oppstod!<br />${err.response.message}`);
					} else {
						notification.error('En feil oppstod!<br />400 Bad request');
					}
				}

				if (err.status == 403) {
					if (err.response.message != null) {
						console.error(err.response.message);
					}
					notification.error('En feil oppstod (403 Forbidden)!<br /><br />Din innlogging har mest sannsynlig utløpt.');
				}

				else if (err.status == 500) {
					notification.error('En feil oppstod!<br />500 Internal server error');
				}

				else {
					notification.error('En feil oppstod!<br />Ukjent feil. Sjekk at alle felt er riktig valgt og utfylt.');
				}
			});
		
	});




	/**
	 * Quill editor
	 */		
	var toolbarOptions = [
		//[{ 'font': [] }],
		[{ 'header': [4, false] }],
		['bold', 'italic', 'underline', 'strike'],        // Toggling inline styles
		[{ 'color': [] }, { 'background': [] }],          // Tekst- og bakgrunnsfarger
		//[{ 'script': 'sub'}, { 'script': 'super' }],    // Subscript/Superscript
		[{ 'list': 'ordered'}, { 'list': 'bullet' }],     // Listetyper
		[{ 'indent': '-1'}, { 'indent': '+1' }],          // Indentation
		//[{ 'direction': 'rtl' }],                        // Tekstretning
		[{ 'align': [] }],                                // Tekstjustering
		['link', 'image', 'video'],                       // Sett inn link, bilde, video
		['code-block', 'clean']                  	      // Blokker
	];

	document.addEventListener("DOMContentLoaded", function() {
		// Initialiser Quill for "Beskrivelse"
		var quillDesc = new Quill('#textAppEditDesc', {
			theme: 'snow',  // Velg tema, 'snow' er standardtemaet
			modules: {
				toolbar: toolbarOptions,
				table: true,
			}
		});

		// Initialiser Quill for "Installasjonsveiledning"
		var quillInst = new Quill('#textAppEditInst', {
			theme: 'snow',
			modules: {
				toolbar: toolbarOptions
			}
		});
	});





	/**
	 * License select
	 */	
	var licenseSelect = document.getElementById('selAppEditLicense');
    var selectedLicenseId = "{{>license.id}}".trim();  // Trim for å fjerne eventuelle ekstra mellomrom

    function populateLicenses(licenses) {
        licenses.forEach(license => {
            const option = document.createElement('option');
            option.value = license.id;
            option.textContent = license.title;

            // Sørg for at begge er strenger for en sikker sammenligning
            if (String(license.id).trim() === String(selectedLicenseId)) {
                option.selected = true;
            }

            licenseSelect.appendChild(option);
        });
    }

    function app_edit_get_licenses() {
        remote.rpc(`${config.api_url}/licenses/get`).then(response => {
            populateLicenses(response);
        })
        .catch((err) => {
            notification.error('Kunne ikke hente lisenser');
            console.error(err);
        });
    }

    app_edit_get_licenses();





	/**
	 * Funksjon for å oppdatere enten bilder eller filer.
	 * @param {string} type - 'images' eller 'files' for å bestemme hva som skal hentes og vises.
	 * @param {string} containerId - ID for containeren der elementene skal vises.
	 */
	function app_edit_refresh_uploads(type, containerId) {
    let container = document.getElementById(containerId);

    remote.rpc(`${config.api_url}/app/get/{{>id}}`)
        .then(response => {
            container.innerHTML = '';

            if (type === 'images') {
                response.images.forEach(image => {
                    const thumbHTML = `
                        <div class="thumb" style="background-image: url('${image.thumb}');">
                            <div class="thumb-footer">
                                <div class="left">
                                    ${image.primary === 1 ? `
                                        <i class="fas fa-check" style="color:green;"></i> Hovedbilde
                                    ` : `
                                        <a href="#" onclick="app_edit_img_set_primary('${image.filename}')">Sett hovedbilde</a>
                                    `}
                                </div>
                                <div class="right">
                                    <a href="#" data-bs-toggle="modal" data-bs-target="#modal-app-edit-delete-confirmation" data-bs-id="${image.filename}" data-bs-type="image">
                                        <i class="fas fa-trash-alt" style="color:rgb(255, 122, 122);"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    `;
                    container.insertAdjacentHTML('beforeend', thumbHTML);
                });
            } else if (type === 'files') {
                response.files.forEach(file => {
                    const fileHTML = `
                        <div class="file box box-sm box-bg">
                            <div class="icon">
                                ${file.icon}
                            </div>
                            <div class="filedata">
                                <div class="title">
                                    <a href="${file.path}" target="_blank">${file.filename}</a>
                                </div>
                                <div class="info">${file.size.readable} &middot; ${file.time_uploaded}</div>
                            </div>
                            <div class="file-actions">
                                <a href="#" data-bs-toggle="modal" data-bs-target="#modal-app-edit-delete-confirmation" data-bs-id="${file.id}" data-bs-type="file">
                                    <i class="fas fa-trash-alt" style="color:rgb(255, 122, 122);"></i>
                                </a>
                            </div>
                        </div>
                    `;
                    container.insertAdjacentHTML('beforeend', fileHTML);
                });
            }
        })
        .catch((err) => {
            notification.error(`En feil oppstod under henting av ${type}`);
            console.error(err);
        });
	}






	/**
	 * Upload images and files
	 */	
	var uploadModal = document.getElementById('modal-app-edit-upload-{{>id}}');
	var fileInput = document.getElementById('file-input');
	var uploadBox = document.getElementById('upload-box');
	var uploadArea = document.getElementById('upload-area');
	var filePreview = document.getElementById('file-preview');
	var uploadSubmit = document.getElementById('upload-submit');
	var upload_type = '';
	var selectedFiles = [];
	var upload_endpoint = '';

	// Håndter modal visning og sette endepunkt og modal tittel
	uploadModal.addEventListener('show.bs.modal', function (event) {
		const button = event.relatedTarget;
		upload_type = button.getAttribute('data-bs-type');

		if (upload_type == 'files') upload_endpoint = '/app/files/upload';
		else if (upload_type == 'images') upload_endpoint = '/app/images/upload';

		// Oppdater modal tittel
		const modalTitle = uploadModal.querySelector('.modal-title');
		modalTitle.textContent = `Last opp ${upload_type === 'images' ? 'bilder' : 'filer'}`;

		// Oppdater input aksepterte filtyper basert på valgt opplasting
		fileInput.setAttribute('accept', upload_type === 'images' ? 'image/*' : '*/*');
	});

	// Håndterer klikk for å åpne filinput
	uploadBox.addEventListener('click', () => {
		fileInput.click();
	});

	// Håndterer filendring (filer valgt av bruker)
	fileInput.addEventListener('change', (e) => {
		handleFiles(e.target.files);
	});

	// Drag and drop funksjonalitet
	uploadBox.addEventListener('dragover', (e) => {
		e.preventDefault();
		uploadBox.classList.add('hover');
	});

	uploadBox.addEventListener('dragleave', () => {
		uploadBox.classList.remove('hover');
	});

	uploadBox.addEventListener('drop', (e) => {
		e.preventDefault();
		uploadBox.classList.remove('hover');
		handleFiles(e.dataTransfer.files);
	});

	// Håndterer opplastning
	uploadSubmit.addEventListener('click', () => {
		if (selectedFiles.length === 0) {
			alert('Ingen filer valgt for opplasting.');
			return;
		}

		const formData = new FormData();
		formData.append('app_id', '{{>id}}');
		for (let i = 0; i < selectedFiles.length; i++) {
			formData.append('files[]', selectedFiles[i]);
			formData.append('images[]', selectedFiles[i]);
		}

		// Send filer til valgt endepunkt
		remote.rpc_post(`${config.api_url}${upload_endpoint}`, formData)
			.then(response => {
				console.log('Upload response:', response);
				notification.success('Filer lastet opp vellykket.');
				selectedFiles = []; // Cleanup array with files
				updatePreview(); // Remove file preview in modal
				
				// Refresh content in page
				if (upload_type == 'files') {
					app_edit_refresh_uploads('files', 'app-edit-files-container-{{>id}}');
				} else {
					app_edit_refresh_uploads('images', 'app-edit-images-container-{{>id}}');
				}
			})
			.catch(error => {
				console.error('Upload error:', error);
				notification.error(`Det oppstod en feil ved opplasting.<br /><br />${error.response.message}`);
			});
	});

	// Legger filer til listen og viser forhåndsvisning
	function handleFiles(files) {
		selectedFiles = [...selectedFiles, ...files];
		updatePreview();
	}

	// Oppdater forhåndsvisning av valgte filer
	function updatePreview() {
		filePreview.innerHTML = '';
		selectedFiles.forEach((file, index) => {
			const fileItem = document.createElement('div');
			fileItem.className = 'file-preview-item';
			fileItem.innerHTML = `
				<span>${file.name}</span>
				<span class="remove-file" data-index="${index}">&times;</span>
			`;

			fileItem.querySelector('.remove-file').addEventListener('click', (e) => {
				const idx = parseInt(e.target.getAttribute('data-index'));
				removeFileFromList(idx);
			});

			filePreview.appendChild(fileItem);
		});
	}

	// Fjern filer fra listen
	function removeFileFromList(index) {
		selectedFiles.splice(index, 1);
		updatePreview();
	}


	


	/**
	 * Set primary image
	 */	
	function app_edit_img_set_primary(image) {
		var formData = new FormData();
		formData.append("id", "{{>id}}");
		formData.append("image", image);

		remote.rpc_post(`${config.api_url}/app/image/primary/set`, formData)
			.then(response => {
				console.log('file set primary', response);

				if (response.status == 'success') {
					app_edit_images_refresh();
				}

				else {
					notification.error('En feil oppstod!');
				}
			})
			.catch((err) => {
				notification.error('En feil oppstod under sletting av fil');
				console.error(err);
			});
	}




	/**
	 * Delete image
	 */	
	function app_edit_img_delete(filename) {
		var formData = new FormData();
		formData.append("app_id", "{{>id}}");
		formData.append("filename", filename);

		remote.rpc_post(`${config.api_url}/app/images/delete`, formData)
			.then(response => {
				console.log('image delete', response);

				if (response.status == 'success') {
					app_edit_refresh_uploads('images', 'app-edit-images-container-{{>id}}');
				}

				else {
					notification.error('En feil oppstod!');
				}
			})
			.catch((err) => {
				notification.error('En feil oppstod under sletting av bilde');
				console.error(err);
			});
	}



	/**
	 * Delete file
	 */
	function app_edit_file_delete(file_id) {
		var formData = new FormData();
		formData.append("app_id", "{{>id}}");
		formData.append("file_id", file_id);

		remote.rpc_post(`${config.api_url}/app/file/delete`, formData)
			.then(response => {
				console.log('file delete', response);

				if (response.status == 'success') {
					app_edit_refresh_uploads('files', 'app-edit-files-container-{{>id}}');
				}

				else {
					notification.error('En feil oppstod!');
				}
			})
			.catch((err) => {
				notification.error('En feil oppstod under sletting av fil');
				console.error(err);
			});
	}


	/**
	 * Delete confirmation
	 */
	document.addEventListener('DOMContentLoaded', function() {
		var deleteConfirmModal = document.getElementById('modal-app-edit-delete-confirmation');
		let idToDelete = null;
		let deleteType = null;

		// Event listener for å hente data fra knappen som åpner modalet
		deleteConfirmModal.addEventListener('show.bs.modal', function(event) {
			var button = event.relatedTarget;
			idToDelete = button.getAttribute('data-bs-id');
			deleteType = button.getAttribute('data-bs-type');
		});

		// Håndterer klikk på "Slett"-knappen i modalet
		document.getElementById('btn-app-edit-item-delete').addEventListener('click', function() {
			if (idToDelete && deleteType) {
			if (deleteType === 'file') {
				app_edit_file_delete(idToDelete); // Kall til slett-funksjonen for filer
			} else if (deleteType === 'image') {
				app_edit_img_delete(idToDelete); // Kall til slett-funksjonen for bilder
			}
			idToDelete = null; // Tilbakestill IDen etter sletting
			deleteType = null; // Tilbakestill typen etter sletting
			const modalInstance = bootstrap.Modal.getInstance(deleteConfirmModal);
			modalInstance.hide(); // Lukk modalet etter sletting
			}
		});
	});





	
</script>